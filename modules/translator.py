from mtranslate import translate
from aiogram.types import InlineQuery, InlineQueryResultArticle, InputTextMessageContent
import hashlib

async def inline_translate(inline_query: InlineQuery):
    query_text = inline_query.query.strip()

    print(f"–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞: {query_text}")

    if not query_text.startswith("tr "):
        await inline_query.answer([
            InlineQueryResultArticle(
                id="error",
                cache_time=0,
                title="Error",
                input_message_content=InputTextMessageContent(
                    message_text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: tr RU EN –ø—Ä–∏–≤–µ—Ç"
                )
            )
        ])
        return

    query_text = query_text[3:].strip().split(maxsplit=2)

    print(f"–†–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞: {query_text}")

    if len(query_text) != 3:
        await inline_query.answer([
            InlineQueryResultArticle(
                id="error",
                cache_time=0,
                title="Error",
                input_message_content=InputTextMessageContent(
                    message_text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: RU EN –ø—Ä–∏–≤–µ—Ç"
                )
            )
        ])
        return

    source_lang, target_lang, text_to_translate = query_text

    try:
        translated_text = translate(text_to_translate, target_lang.lower(), source_lang.lower())
        print(translated_text)
    except Exception as e:
        await inline_query.answer([
            InlineQueryResultArticle(
                id="error",
                cache_time=0,
                title="Error",
                input_message_content=InputTextMessageContent(
                    message_text=f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {str(e)}"
                )
            )
        ])
        return

    result_id = hashlib.md5(text_to_translate.encode()).hexdigest()

    translation_message = (
        f"üî† *–ü–µ—Ä–µ–≤–æ–¥*\n\n"
        f"–û—Ä–∏–≥–∏–Ω–∞–ª: {text_to_translate}\n"
        f"–ü–µ—Ä–µ–≤–æ–¥: {translated_text}"
    )

    item = InlineQueryResultArticle(
        id=result_id,
        cache_time=0,
        type="article",
        title=f"–ü–µ—Ä–µ–≤–æ–¥: {source_lang.upper()} ‚û°Ô∏è {target_lang.upper()}",
        input_message_content=InputTextMessageContent(
            message_text=translation_message,
            parse_mode="Markdown"
        ),
        thumbnail_url="https://tinypic.host/images/2024/09/01/DALLE-2024-09-01-03.40.54---An-emoji-style-illustration-of-the-text-EN-RU.-The-text-should-be-bold-and-colorful-with-a-smooth-glossy-finish-to-resemble-a-high-quality-emoji..webp"
    )

    return item